openapi: 3.0.0
info:
  title: "API 문서"
  description: "ewha 백엔드 API 문서"
  version: "1.0"
tags:
  - name: "login"
    description: "타 api 실행전 로그인을 해야합니다."
  - name: "lecture"
    description: "강의와 관련된 api 입니다."
  - name: "prob"
    description: "과제와 관련된 api 입니다."

paths:
  /api/user/login:
    post:
      tags:
        - login
      summary: 교수 로그인
      operationId: Login2
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - pw
              properties:
                email:
                  type: string
                  format: email
                pw:
                  type: string
                  format: password
            examples:
              professor:
                value:
                  email: "dev_professor@test.com"
                  pw: "1234"
              student:
                value:
                  email: "dev_student@test.com"
                  pw: "1234"

      responses:
        '200':
          description: Successful login
          headers:
            Set-Cookie:
              schema:
                type: string
                description: Authentication cookie for the user.
                example: "access_token_cookie=eyJ0eXAi...; Secure; HttpOnly; Path=/; SameSite=None"
          content:
            application/json:
              schema:
                type: object
                properties:
                  loginSuccess:
                    type: integer
                    description: Status indicating successful login. 1 for success.
                    example: 1
  /api/lecture/list:
    get:
      tags:
        - lecture
      summary: 강의 목록 조회
      operationId: React_Lecture
      responses:
        '200':
          description: A list of lectures and user information.
          content:
            application/json:
              schema:
                type: object
                properties:
                  lecturelist:
                    type: array
                    items:
                      $ref: '#/components/schemas/Lecture'
                  userInfo:
                    $ref: '#/components/schemas/UserInfo'
                  role:
                    type: integer
                    description: Role of the user.
  /api/prob/professor:
    get:
      tags:
        - prob
      summary: 교수 계정으로 과제 목록 조회
      operationId: React_Porb_professor
      parameters:
        - name: lecture_no
          in: query
          description: Lecture Number
          required: true
          schema:
            type: integer
            example: 42

      responses:
        '200':
          description: Successful response with a list of problems
          content:
            application/json:
              schema:
                type: object
                properties:
                  prob_list:
                    type: array
                    items:
                      $ref: '#/components/schemas/Problem_professor'
  /api/prob/student:
    get:
      tags:
        - prob
      summary: 학생 계정으로 과제 목록 조회
      operationId: React_Prob_student
      parameters:
        - name: lecture_no
          in: query
          description: Number of the lecture.
          required: true
          schema:
            type: integer
            example: 42
      responses:
        '200':
          description: Successful response containing a list of problems for the student.
          content:
            application/json:
              schema:
                type: object
                properties:
                  prob_list:
                    type: array
                    items:
                      $ref: '#/components/schemas/Problem_student'
  /api/prob/detail:
    get:
      tags:
        - prob
      summary: 과제 상세 조회
      operationId: React_Prob_detail
      parameters:
        - name: as_no
          in: query
          description: 과제 번호
          required: true
          schema:
            type: integer
            example: 145
      responses:
        '200':
          description: Successful response containing detailed information about a specific assignment/problem.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetail'


components:
  securityScheme:
    cookieAuth:
      type: apiKey
      in: cookie
      name: access_token_cookie
  schemas:
    Lecture:
      type: object
      properties:
        lecture_no:
          type: integer
        lecture_name:
          type: string
        year:
          type: string
          example: "2023"
        semester:
          type: string
          example: "1학기"
        major:
          type: string
          example: "한일통역"
        separated:
          type: string
          example: "1분반"
        professor:
          type: string
          example: "교수" 
    UserInfo:
      type: object
      properties:
        type:
          type: string
          example: "login"
        user_no:
          type: integer
        user_email:
          type: string
          format: email
        user_name:
          type: string
        user_major:
          type: string
        user_perm:
          type: integer
    Problem_professor:
      type: object
      properties:
        as_name:
          type: string
          description: Assignment Name
          example: "\uc870\ud606\uc2dd"
        as_no:
          type: integer
          description: Assignment Number
          example: 145
        limit_time:
          type: string
          format: date-time
          description: Limit Time
          example: "Thu, 13 Jul 2023 00:26:00 GMT"
        open_time:
          type: string
          format: date-time
          description: Open Time
          example: "Mon, 04 Sep 2023 12:54:14 GMT"
        reveal:
          type: boolean
          description: Visibility of the problem
          example: true
    Problem_student:
      type: object
      properties:
        as_name:
          type: string
          description: Name of the assignment/problem.
          example: "\uc870\ud606\uc2dd"
        as_no:
          type: integer
          description: Number of the assignment/problem.
          example: 145
        end_submission:
          type: boolean
          nullable: true
          description: Flag indicating if the submission ended or not.
          example: true
        limit_time:
          type: string
          format: date-time
          description: Time limit for the assignment/problem.
          example: "Thu, 13 Jul 2023 00:26:00 GMT"
        professor_review:
          type: string
          nullable: true
          description: Review given by the professor for the assignment/problem.
          example: "추후 수정 예정"
    ProblemDetail:
      type: object
      properties:
        as_name:
          type: string
          description: Name of the assignment/problem.
        assign_count:
          type: integer
          description: Assignment count.
        detail:
          type: string
          description: Detailed description of the assignment/problem.
        end_submission:
          type: boolean
          description: Flag indicating if the submission ended or not.
        feedback:
          type: boolean
          description: Indicates if there is feedback or not.
        file_name:
          type: string
          nullable: true
          description: Name of the related file.
        file_path:
          type: string
          nullable: true
          description: Path to the related file.
        keyword:
          type: string
          description: Keywords related to the assignment/problem.
        limit_time:
          type: string
          format: date-time
          description: Time limit for the assignment/problem.
        my_count:
          type: integer
          nullable: true
          description: Personal count.
        open_time:
          type: string
          format: date-time
          description: Time when the assignment/problem was opened.